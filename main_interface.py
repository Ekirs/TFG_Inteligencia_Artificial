# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI_finalv07.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import time

from PyQt5.QtWidgets import QVBoxLayout  # para minijuego
import LLM_manager
from PyQt5 import QtCore, QtGui, QtWidgets
from chat_config import ChatConfig
from TicTacToe_minigame import TicTacToe


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1356, 948)

        self.config = ChatConfig()  # Usar chat_config.variable para acceso

        MainWindow.setStyleSheet("background-color: #E2E2E2;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setObjectName("tabWidget")
        self.tabMain = QtWidgets.QWidget()
        self.tabMain.setObjectName("tabMain")

        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tabMain)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayoutTop = QtWidgets.QHBoxLayout()
        self.horizontalLayoutTop.setObjectName("horizontalLayoutTop")
        self.frameModel = QtWidgets.QFrame(self.tabMain)
        self.frameModel.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameModel.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameModel.setObjectName("frameModel")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frameModel)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.labelLoadedModel = QtWidgets.QLabel(self.frameModel)
        self.labelLoadedModel.setMaximumSize(QtCore.QSize(350, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelLoadedModel.setFont(font)
        self.labelLoadedModel.setAlignment(QtCore.Qt.AlignCenter)
        self.labelLoadedModel.setObjectName("labelLoadedModel")
        self.verticalLayout_2.addWidget(self.labelLoadedModel)
        self.textBrowserStatus = QtWidgets.QTextBrowser(self.frameModel)
        self.textBrowserStatus.setMaximumSize(QtCore.QSize(350, 16777215))
        self.textBrowserStatus.setAutoFillBackground(False)
        self.textBrowserStatus.setStyleSheet("""background-color: #FFFFF6;
                                             font-size: 10pt;
                                             """)
        self.textBrowserStatus.setObjectName("textBrowserStatus")
        self.verticalLayout_2.addWidget(self.textBrowserStatus)
        self.labelChangeModel = QtWidgets.QLabel(self.frameModel)
        self.labelChangeModel.setMaximumSize(QtCore.QSize(350, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelChangeModel.setFont(font)
        self.labelChangeModel.setAlignment(QtCore.Qt.AlignCenter)
        self.labelChangeModel.setObjectName("labelChangeModel")
        self.verticalLayout_2.addWidget(self.labelChangeModel)
        self.comboBoxChooseModel = QtWidgets.QComboBox(self.frameModel)
        self.comboBoxChooseModel.setMaximumSize(QtCore.QSize(350, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBoxChooseModel.setFont(font)
        self.comboBoxChooseModel.setStyleSheet("background-color: #F2FDF2")
        self.comboBoxChooseModel.setObjectName("comboBoxChooseModel")
        self.comboBoxChooseModel.addItem("")
        self.comboBoxChooseModel.addItem("")
        self.comboBoxChooseModel.addItem("")
        self.verticalLayout_2.addWidget(self.comboBoxChooseModel)
        self.horizontalLayoutTop.addWidget(self.frameModel)
        self.frameAreaGame = QtWidgets.QFrame(self.tabMain)
        self.frameAreaGame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameAreaGame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameAreaGame.setObjectName("frameAreaGame")
        self.horizontalLayoutTop.addWidget(self.frameAreaGame)

        # Crea una instancia de TicTacToe
        self.tic_tac_toe_game = TicTacToe()

        # se agrega el juego al frameAreaGame. Tendrá su propio aporte de GUI extra, en su código.
        layout = QVBoxLayout()
        layout.addWidget(self.tic_tac_toe_game)
        self.frameAreaGame.setLayout(layout)

        spacerItem = QtWidgets.QSpacerItem(11, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayoutTop.addItem(spacerItem)
        self.horizontalLayoutTop.setStretch(0, 1)
        self.horizontalLayoutTop.setStretch(1, 4)
        self.horizontalLayoutTop.setStretch(2, 2)
        self.verticalLayout_4.addLayout(self.horizontalLayoutTop)
        self.frameChat = QtWidgets.QFrame(self.tabMain)
        self.frameChat.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameChat.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameChat.setObjectName("frameChat")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frameChat)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.textBrowserOutput = QtWidgets.QTextBrowser(self.frameChat)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textBrowserOutput.setFont(font)
        self.textBrowserOutput.setStyleSheet("background-color: #FFFFFF; /* Fondo blanco */\n"
                                             "\n"
                                             "")
        self.textBrowserOutput.setObjectName("textBrowserOutput")
        self.verticalLayout_3.addWidget(self.textBrowserOutput)
        self.frameInputText = QtWidgets.QFrame(self.frameChat)
        self.frameInputText.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameInputText.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameInputText.setObjectName("frameInputText")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frameInputText)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lineEditInput = QtWidgets.QLineEdit(self.frameInputText)
        self.lineEditInput.setMinimumSize(QtCore.QSize(0, 60))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.lineEditInput.setFont(font)
        self.lineEditInput.setStyleSheet("background-color: #F0F4FF; \n"
                                         "padding-left: 10px; /* pequeño espacio previo a escribir */\n"
                                         "")
        self.lineEditInput.setInputMask("")
        self.lineEditInput.setText("")
        self.lineEditInput.setCursorPosition(0)
        self.lineEditInput.setObjectName("lineEditInput")
        self.horizontalLayout.addWidget(self.lineEditInput)
        self.pushButtonSend = QtWidgets.QPushButton(self.frameInputText)
        self.pushButtonSend.setMinimumSize(QtCore.QSize(0, 60))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.pushButtonSend.setFont(font)
        self.pushButtonSend.setStyleSheet("background-color: #DFDCDA")
        self.pushButtonSend.setObjectName("pushButtonSend")
        self.horizontalLayout.addWidget(self.pushButtonSend)
        self.verticalLayout_3.addWidget(self.frameInputText)
        self.verticalLayout_4.addWidget(self.frameChat)
        self.tabWidget.addTab(self.tabMain, "")

        # pestaña de Opciones
        self.tabOptions = QtWidgets.QWidget()
        self.tabOptions.setObjectName("tabOptions")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tabOptions)
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem1)

        # rincón temporizador GUI
        self.labelTemp = QtWidgets.QLabel(self.tabOptions)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.labelTemp.setFont(font)

        self.labelTemp.setAlignment(QtCore.Qt.AlignCenter)
        self.labelTemp.setObjectName("labelTemp")
        self.verticalLayout.addWidget(self.labelTemp)
        self.comboBoxTimer = QtWidgets.QComboBox(self.tabOptions)
        self.comboBoxTimer.setMinimumSize(QtCore.QSize(150, 0))
        self.comboBoxTimer.setMaximumSize(QtCore.QSize(200, 16777215))
        font = QtGui.QFont()
        font.setPointSize(14)

        self.comboBoxTimer.setFont(font)
        self.comboBoxTimer.setStyleSheet("background-color: #F2FDF2")
        self.comboBoxTimer.setObjectName("comboBoxTimer")
        self.comboBoxTimer.addItem("")
        self.comboBoxTimer.addItem("")
        self.comboBoxTimer.addItem("")
        self.comboBoxTimer.addItem("")
        self.comboBoxTimer.addItem("")
        self.comboBoxTimer.addItem("")
        self.verticalLayout.addWidget(self.comboBoxTimer, 0, QtCore.Qt.AlignHCenter)  # | QtCore.Qt.AlignVCenter)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem2)

        # rincón tamaño contexto GUI
        self.labelSizeContext = QtWidgets.QLabel(self.tabOptions)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.labelSizeContext.setFont(font)
        self.labelSizeContext.setAlignment(QtCore.Qt.AlignCenter)
        self.labelSizeContext.setObjectName("labelSizeContext")
        self.verticalLayout.addWidget(self.labelSizeContext)
        self.comboBoxSizeContext = QtWidgets.QComboBox(self.tabOptions)
        self.comboBoxSizeContext.setMinimumSize(QtCore.QSize(150, 0))
        self.comboBoxSizeContext.setMaximumSize(QtCore.QSize(200, 16777215))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.comboBoxSizeContext.setFont(font)
        self.comboBoxSizeContext.setStyleSheet("background-color: #F2FDF2")
        self.comboBoxSizeContext.setObjectName("comboBoxSizeContext")
        self.comboBoxSizeContext.addItem("")
        self.comboBoxSizeContext.addItem("")
        self.comboBoxSizeContext.addItem("")
        self.verticalLayout.addWidget(self.comboBoxSizeContext, 0, QtCore.Qt.AlignHCenter)  # | QtCore.Qt.AlignVCenter)
        self.labelTempTip = QtWidgets.QLabel(self.tabOptions)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelTempTip.setFont(font)  # tempTip = label para sizeContext
        self.labelTempTip.setAlignment(QtCore.Qt.AlignCenter)
        self.labelTempTip.setObjectName("labelTempTip")
        self.verticalLayout.addWidget(self.labelTempTip)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)

        self.verticalLayout.addItem(spacerItem3)

        # rincón selector lector voz
        self.labelReader = QtWidgets.QLabel(self.tabOptions)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.labelReader.setFont(font)
        self.labelReader.setAlignment(QtCore.Qt.AlignCenter)
        self.labelReader.setObjectName("labelReader")
        self.verticalLayout.addWidget(self.labelReader)
        self.comboBoxVoiceReader = QtWidgets.QComboBox(self.tabOptions)
        self.comboBoxVoiceReader.setMinimumSize(QtCore.QSize(150, 0))
        self.comboBoxVoiceReader.setMaximumSize(QtCore.QSize(400, 16777215))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.comboBoxVoiceReader.setFont(font)
        self.comboBoxVoiceReader.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.comboBoxVoiceReader.setStyleSheet("background-color: #F2FDF2")
        self.comboBoxVoiceReader.setObjectName("comboBoxVoiceReader")
        self.comboBoxVoiceReader.addItem("")
        self.comboBoxVoiceReader.addItem("")
        self.comboBoxVoiceReader.addItem("")
        self.verticalLayout.addWidget(self.comboBoxVoiceReader, 0, QtCore.Qt.AlignHCenter)
        self.labelReaderTip = QtWidgets.QLabel(self.tabOptions)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.labelReaderTip.setFont(font)
        self.labelReaderTip.setAlignment(QtCore.Qt.AlignCenter)
        self.labelReaderTip.setObjectName("labelReaderTip")
        self.verticalLayout.addWidget(self.labelReaderTip)
        font = QtGui.QFont()
        font.setPointSize(8)
        spacerItem4 = QtWidgets.QSpacerItem(20, 221, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem4)

        self.tabWidget.addTab(self.tabOptions, "")
        self.verticalLayout_5.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionAjustes = QtWidgets.QAction(MainWindow)
        self.actionAjustes.setObjectName("actionAjustes")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.comboBoxChooseModel.setCurrentIndex(0)
        self.comboBoxTimer.setCurrentIndex(2)
        self.comboBoxSizeContext.setCurrentIndex(0)
        self.comboBoxVoiceReader.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.tabWidget.setCurrentIndex(0)
        self.comboBoxTimer.setCurrentIndex(self.config.timer_index_gui)
        self.comboBoxChooseModel.setCurrentIndex(self.config.llm_index_gui)
        self.comboBoxSizeContext.setCurrentIndex(self.config.context_index)
        self.comboBoxVoiceReader.setCurrentIndex(self.config.text2speech_index)

        # Llama al método update_timer_auto_llm con el índice
        self.update_timer_auto_llm(self.config.timer_index_gui)
        self.comboBoxTimer.currentIndexChanged.connect(self.update_timer_auto_llm)

        # Llama al método update_context_size con el índice
        self.update_context_size(self.config.context_index)
        self.comboBoxSizeContext.currentIndexChanged.connect(self.update_context_size)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Llama al método update_timer_auto_llm con el índice
        self.comboBoxChooseModel.currentIndexChanged.connect(self.cambio_modelo)

        # Llama al método cambio_text2speech con el índice
        self.comboBoxVoiceReader.currentIndexChanged.connect(self.cambio_text2speech)

        # focus en este item parará el automatizado del temporizador
        self.lineEditInput.textChanged.connect(self.check_timer)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Chat 'n' Game"))
        self.labelLoadedModel.setText(_translate("MainWindow", "Modelo de lenguaje cargado:"))
        self.labelChangeModel.setText(_translate("MainWindow", "Cambiar modelo activo"))
        self.comboBoxChooseModel.setItemText(0, _translate("MainWindow", "LOCAL: Mistral 7B"))
        self.comboBoxChooseModel.setItemText(1, _translate("MainWindow", "LOCAL: Llama2 7B"))
        self.comboBoxChooseModel.setItemText(2, _translate("MainWindow", "ONLINE: Cohere"))
        self.textBrowserOutput.setHtml(_translate("MainWindow",
                                                  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                                  "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                                  "p, li { white-space: pre-wrap; }\n"
                                                  "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
                                                  "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.lineEditInput.setPlaceholderText(_translate("MainWindow", "Escribir texto..."))
        self.pushButtonSend.setText(_translate("MainWindow", "Enviar"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabMain), _translate("MainWindow", "Principal"))
        self.labelTemp.setText(_translate("MainWindow", "Temporizador actualizaciones automáticas del modelo"))
        self.comboBoxTimer.setItemText(0, _translate("MainWindow", "15 segundos"))
        self.comboBoxTimer.setItemText(1, _translate("MainWindow", "30 segundos"))
        self.comboBoxTimer.setItemText(2, _translate("MainWindow", "1 minuto"))
        self.comboBoxTimer.setItemText(3, _translate("MainWindow", "3 minutos"))
        self.comboBoxTimer.setItemText(4, _translate("MainWindow", "5 minutos"))
        self.comboBoxTimer.setItemText(5, _translate("MainWindow", "10 minutos"))
        self.labelSizeContext.setText(_translate("MainWindow", "Tamaño contexto del chat (KB)"))
        self.comboBoxSizeContext.setItemText(0, _translate("MainWindow", "1024"))
        self.comboBoxSizeContext.setItemText(1, _translate("MainWindow", "2048"))
        self.comboBoxSizeContext.setItemText(2, _translate("MainWindow", "4096"))
        self.labelTempTip.setText(_translate("MainWindow", "Nota: si el modelo es online, usará su propio contexto."))
        self.labelReader.setText(_translate("MainWindow", "Activar voz"))
        self.comboBoxVoiceReader.setItemText(0, _translate("MainWindow", "Desactivado"))
        self.comboBoxVoiceReader.setItemText(1, _translate("MainWindow", "Inglés de EEUU"))
        self.comboBoxVoiceReader.setItemText(2, _translate("MainWindow", "Español (para pruebas)"))
        self.labelReaderTip.setText(
            _translate("MainWindow", "Nota: esta aplicación está pensada para conversar en inglés."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabOptions), _translate("MainWindow", "Opciones"))
        self.actionAjustes.setText(_translate("MainWindow", "Ajustes"))

    def update_timer_auto_llm(self, index):
        # Mapear los valores del QComboBox a segundos
        values = {
            0: 15,
            1: 30,
            2: 60,
            3: 180,
            4: 300,
            5: 600
        }
        # Actualizar timer_auto_llm en config con el valor seleccionado
        self.config.timer_auto_llm = values.get(index, 0)  # Por defecto, 0 si el índice no está en el diccionario
        print("Nuevo valor de timer_auto_llm:", self.config.timer_auto_llm)

    def update_context_size(self, index):
        # Mapear los valores del QComboBox de cara al contexto
        values = {
            0: 1024,
            1: 2048,
            2: 4096
        }
        # Actualizar context_size en config con el valor seleccionado
        self.config.context_size = values.get(index, 0)  # Por defecto, 0 si el índice no está en el diccionario
        print("Nuevo valor de context_size:", self.config.context_size)

    def cambio_text2speech(self, index):
        # Actualizar context_size en config con el valor seleccionado
        self.config.text2speech_index = index

    def check_timer(self):
        # Se reinicia el temporizador si el QLineEdit está activo
        if self.lineEditInput.hasFocus():
            print("Focus en lineEditInput - reiniciando automatizado de LLM")
            self.config.make_auto_llm_restart = True

    def update_pantalla_status(self):
        self.textBrowserStatus.clear()
        self.textBrowserStatus.append("Modelo:" + self.config.modelo_activo + "\n")
        self.textBrowserStatus.append("Cuantizado / versión:" + self.config.model_name_or_path + "\n\n")
        self.textBrowserStatus.append(self.config.modelo_licencia + "\n")

    def cambio_modelo(self, index):  # Cada vez que cambiemos de modelo, tendremos que parar el anterior primero
        # Recogemos datos del indice, actualizando config para el modelo elegido
        self.config.llm_index_gui = index
        LLM_manager.my_model()  # Acceso a variables nuevo modelo tras cambio de su índice
        self.textBrowserOutput.append(
            "**Cambiando a modelo " + self.config.modelo_activo
            + "**\n")
        self.textBrowserStatus.clear()
        self.textBrowserStatus.append("* En espera *")
        self.config.stop_llm = True  # Señal para parar el llm activo, previo a cambiarlo por otro

        LLM_manager.stop_model()  # Limpiamos memoria
        LLM_manager.cargando_modelos()
        LLM_manager.start_timer(self)  # Reactivamos temporizador para el modo automatico
        self.update_pantalla_status()  # Cargado el modelo, refrescamos también pantalla status
